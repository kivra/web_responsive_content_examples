@use "sass:math";

@mixin gridCol($col-count) {
  width: math.percentage(math.div($col-count, 12));

  @if $col-count == 12 {
    padding: pxToRem(math.div($grid--gutter, 2)) 0;

    &:first-child {
      padding-top: 0;
    }

    &:last-child {
      padding-bottom: 0;
    }
  } @else {
    padding-left: pxToRem(math.div($grid--gutter, 2));
    padding-right: pxToRem(math.div($grid--gutter, 2));

    &:first-child {
      padding-left: 0;
    }

    &:last-child {
      padding-right: 0;
    }
  }
}

$grid-cols: 12;

.container {
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;
  padding: pxToRem(28) pxToRem(24);

  @include small {
    padding: pxToRem(22) pxToRem(10);
  }
}

.grid-row {
  display: flex;
  flex-wrap: wrap;
  margin-top: pxToRem(40);
}

.grid-col--flex {
  display: flex;
}

.grid-col--flex-vcenter {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@for $i from 1 through $grid-cols {
  .grid-col-#{$i} {
    @include gridCol($i);
  }
}

@include medium {
  @for $i from 1 through $grid-cols {
    .grid-col-m-#{$i} {
      @include gridCol($i);
    }
  }
}

@include small {
  @for $i from 1 through $grid-cols {
    .grid-col-s-#{$i} {
      @include gridCol($i);
    }
  }
}
